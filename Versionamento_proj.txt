VERSÃO 1

# #importação de bibliotecas
# import os
# #navegação pelo diretório
# from openpyxl import Workbook
# #excel
# import pdfplumber
# #leitura e interação com o pdf
# from datetime import datetime 
# #importação de data e hora
# import re
# #instrução regex

# directory = 'pdf_faturas'
# files = os.listdir(directory)
# files_quant = len(files)

# #idenfica a quantidade de arquivos

# if files_quant == 0:
#     raise Exception("Não foram encontrados arquivos no diretório")
# #se for igual a 0, sem arquivos encontrados no diretório

# #criando a planilha
# wb = Workbook()
# #sheet
# ws = wb.active
# #título da sheet
# ws.title = 'Importação de Faturas'


# ws['A1'] = 'Fatura'
# ws['B1'] = 'Data de Emissão'
# ws['C1'] = 'Data de Vencimento'
# ws['D1'] = 'Valor da Fatura'
# ws['E1'] = 'Nome do Fornecedor'
# ws['F1'] = 'CNPJ do Fornecedor'
# ws['G1'] = 'Endereço do Fornecedor'
# ws['H1'] = 'Arquivo da Fatura'

# Last_empty_line = 1
# while ws['A' + str(Last_empty_line)].value is not None:
#     Last_empty_line += 1

# for file in files:
#     with pdfplumber.open(directory + "/" + file) as pdf:
#     #abrindo os pdfs encontrados na pasta
#         first_page = pdf.pages[0]
#         pdf_text = first_page.extract_text()
#         # print(pdf_text)

#     #Instrução Regex permite compreender expressões regulares, manipulando textos com bases em padrões específicos
#     inv_numero_re_patterns = r'FATURA # (\d+)'
#     inv_dataE_re_pattern = r'DATA DE EMISSÃO (\d{2}/\d{2}/\d{4})'
#     inv_dataV_re_pattern = r'DATA DE VENCIMENTO (\d{2}/\d{2}/\d{4})'

#     linhas = pdf_text.splitlines()
#     invoice_numero = 'Não encontrado'
#     invoice_dataE = 'Não encontrado'
#     invoice_dataV = 'Não encontrado'
#     invoice_valorTotal = 'Não encontrado'
#     invoice_valorNomeFornecedor = 'Não encontrado'
#     invoice_valorCnpjFornecedor = 'Não encontrado'
#     invoice_valorEndFornecedor = 'Não encontrado'
    
#     for index, linha in enumerate(linhas):
#         print(f'{index} - {linha}')
#         if(re.search(inv_numero_re_patterns, linha)):
#             invoice_numero =re.search(inv_numero_re_patterns, linha).group(1) 
#         elif(re.search('FATURA', linha)):
#             invoice_numero = linhas[index-1]
#         elif(re.search(inv_dataE_re_pattern, linha)):
#             invoice_dataE = re.search(inv_dataE_re_pattern, linha).group(1)
#         elif(re.search(inv_dataV_re_pattern, linha)):
#             invoice_dataV = re.search(inv_dataV_re_pattern, linha).group(1)
#         elif(linha.find('$')!= -1):
#             invoice_valorTotal = linha.split('R$')[1]
        
#     ws['A{}'.format(Last_empty_line)] = invoice_numero
#     ws['B{}'.format(Last_empty_line)] = invoice_dataE
#     ws['C{}'.format(Last_empty_line)] = invoice_dataV
#     ws['D{}'.format(Last_empty_line)] = invoice_valorTotal
#     ws['E{}'.format(Last_empty_line)] = linhas[0]
#     ws['F{}'.format(Last_empty_line)] = linhas[1]
#     ws['G{}'.format(Last_empty_line)] = f"{linhas[2]}, {linhas[3]}"
#     ws['H{}'.format(Last_empty_line)] = file

#     Last_empty_line += 1

# full_now = str(datetime.now()).replace(":","-")
# dot_index = full_now.index(".")
# now = full_now[:dot_index]

# pasta_faturas = 'Listagem_Faturas'
# os.makedirs(pasta_faturas, exist_ok=True)
# wb.save('{}/Faturas - {}.xlsx'.format(pasta_faturas,now))




VERSÃO 2

# #  === Importação de Bibliotecas === #
# import os
# import re
# from datetime import datetime
# from openpyxl import Workbook
# import pdfplumber

# # === Configuração inicial === #
# PASTA_PDFS = 'pdf_faturas'
# PASTA_SAIDA = 'Listagem_Faturas'
# ARQUIVOS = os.listdir(PASTA_PDFS)

# if not ARQUIVOS:
#     raise Exception("Não foram encontrados arquivos no diretório")

# # === Função para extrair dados da fatura === #
# def extrair_dados_pdf(caminho_pdf):
#     with pdfplumber.open(caminho_pdf) as pdf:
#         primeira_pagina = pdf.pages[0]
#         texto = primeira_pagina.extract_text()
#         linhas = texto.splitlines()

#     # Padrões Regex
#     padrao_fatura = r'FATURA # (\d+)'
#     padrao_emissao = r'DATA DE EMISSÃO (\d{2}/\d{2}/\d{4})'
#     padrao_vencimento = r'DATA DE VENCIMENTO (\d{2}/\d{2}/\d{4})'

#     dados = {
#         'numero': 'Não encontrado',
#         'emissao': 'Não encontrado',
#         'vencimento': 'Não encontrado',
#         'valor': 'Não encontrado',
#         'fornecedor': linhas[0] if linhas else 'Não encontrado',
#         'slogan': linhas[1] if len(linhas) > 1 else 'Não encontrado'
#     }

#     for i, linha in enumerate(linhas):
#         if re.search(padrao_fatura, linha):
#             dados['numero'] = re.search(padrao_fatura, linha).group(1)
#         elif 'FATURA' in linha and i > 0:
#             dados['numero'] = linhas[i - 1]
#         elif re.search(padrao_emissao, linha):
#             dados['emissao'] = re.search(padrao_emissao, linha).group(1)
#         elif re.search(padrao_vencimento, linha):
#             dados['vencimento'] = re.search(padrao_vencimento, linha).group(1)
#         elif 'R$' in linha:
#             partes = linha.split('R$')
#             if len(partes) > 1:
#                 dados['valor'] = partes[1].strip()

#     return dados

# # === Criação da planilha === #
# wb = Workbook()
# ws = wb.active
# ws.title = 'Importação de Faturas'

# # Cabeçalhos
# cabecalhos = ['Fatura', 'Data de Emissão', 'Data de Vencimento', 'Valor da Fatura',
#               'Nome do Fornecedor', 'CNPJ do Fornecedor', 'Endereço do Fornecedor' 'Arquivo da Fatura']
# ws.append(cabecalhos)

# # === Processamento de cada PDF === #
# for arquivo in ARQUIVOS:
#     caminho_arquivo = os.path.join(PASTA_PDFS, arquivo)
#     dados_fatura = extrair_dados_pdf(caminho_arquivo)

#     linha = [
#         dados_fatura['numero'],
#         dados_fatura['emissao'],
#         dados_fatura['vencimento'],
#         dados_fatura['valor'],
#         dados_fatura['fornecedor'],
#         dados_fatura['cnpjfornecedor'],
#         dados_fatura['enderecofornecedor'],
#         arquivo
#     ]

#     ws.append(linha)

# # === Salvando o arquivo final === #
# timestamp = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
# os.makedirs(PASTA_SAIDA, exist_ok=True)
# caminho_saida = os.path.join(PASTA_SAIDA, f'Faturas - {timestamp}.xlsx')
# wb.save(caminho_saida)

# print(f"Planilha salva com sucesso em: {caminho_saida}")